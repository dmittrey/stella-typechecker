// sample program in Stella Core
language core;
extend with #type-ascriptions;

fn Bool::not(b : Bool) -> Bool {
    return
        if b then false else true
}

fn twice(f : fn(Bool) -> Bool) -> (fn(Bool) -> Bool) {
    return fn(x : Bool) {
        return f(f(x))
    }
}

fn main(b : Bool) -> Bool {
    return 0 as Bool
}

//ERROR_UNEXPECTED_TYPE_FOR_EXPRESSION