// sample program in Stella Core
language core;

fn Bool::not(b : Bool) -> Bool {
    return
        if b then false else true; if b then false else true
}

fn twice(f : fn(Bool) -> Bool) -> (fn(Bool) -> Bool) {
    return fn(x : Bool) {
        return f(f(x))
    }
}

fn main(b : Nat) -> Bool {
    return 
        {true, b}.1
}